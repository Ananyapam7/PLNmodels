% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PLNnetwork.R
\name{PLNnetwork}
\alias{PLNnetwork}
\alias{PLNnetwork.formula}
\alias{PLNnetwork.default}
\title{Fit a Poisson lognormal model towards network inference}
\usage{
PLNnetwork(Robject, ...)

\method{PLNnetwork}{formula}(formula, penalties = NULL,
  control.init = list(), control.main = list())

\method{PLNnetwork}{default}(Y, X = cbind(rep(1, nrow(Y))), O = matrix(0,
  nrow(Y), ncol(Y)), penalties = NULL, approx = FALSE,
  control.init = list(), control.main = list())
}
\arguments{
\item{Robject}{an R object, either a formula or a matrix}

\item{...}{additional parameters. Not used}

\item{formula}{a formula}

\item{penalties}{a vector of positive real number controling the level of sparisty of the underlying network}

\item{control.init}{a list for controling the optimization. See details.}

\item{control.main}{a list for controling the optimization. See details.}

\item{Y}{a (n x p) matrix of count data}

\item{X}{an optional (n x d) matrix of covariates. SHould include the intercept (a column of one) if the default method is used.}

\item{O}{an optional (n x p) matrix of offsets.}
}
\value{
an R6 object with class \code{\link[=PLNnetworkfamily-class]{PLNnetworkfamily}}, which contains
a collection of models with class \code{\link[=PLNnetworkfit-class]{PLNnetworkfit}}
}
\description{
two methods are available for specifing the models (with formulas or matrices)
}
\details{
The list of parameters \code{control.init} and \code{control.main} control the optimization of the intialization and the main process, with the following entries
 \itemize{
 \item{"approx"}{boolean for performing a two-step approach (PLN + graphical-Lasso) rather than the fully joint optimization. Default to FALSE.}
 \item{"out.tol"}{outer solver stops when an optimization step changes the objective function by less than xtol multiply by the absolute value of the parameter. Default is 1e-6}
 \item{"out.maxit"}{outer solver stops when the number of iteration exeeeds maxiter. Default is 10000}
 \item{"penalize.diagonal"}{boolean: should the diagonal terms be penalized in the graphical-Lasso? Default is FALSE.}
 \item{"ftol_rel"}{stop when an optimization step changes the objective function by less than ftol_rel multiplied by the absolute value of the parameter.}
 \item{"ftol_abs"}{stop when an optimization step changes the objective function by less than ftol_abs .}
 \item{"xtol_rel"}{stop when an optimization step changes every parameters by less than xtol_rel multiplied by the absolute value of the parameter.}
 \item{"xtol_abs"}{stop when an optimization step changes every parameters by less than xtol_abs.}
 \item{"maxeval"}{stop when the number of iteration exceeds maxeval. Default is 10000}
 \item{"method"}{the optimization method used by NLOPT among LD type, i.e. "MMA", "LBFGS",
    "TNEWTON", "TNEWTON_RESTART", "TNEWTON_PRECOND", "TNEWTON_PRECOND_RESTART",
    "TNEWTON_VAR1", "TNEWTON_VAR2". See NLOPTR documentation for further details. Default is "MMA".}
 \item{"lbvar"}{the lower bound (box constraint) for the variational variance parameters. Default is 1e-5.}
 \item{"trace"}{integer for verbosity. Useless when \code{cores} > 1}
 \item{"inception"}{a PLNfit to start with. If NULL, a PLN is fitted on the . If an R6 object with class 'PLNfit' is given, it is used to initialize the model.}
}
}
\examples{
## See the vignette TODO
}
\seealso{
The classes \code{\link[=PLNnetworkfamily-class]{PLNnetworkfamily}} and \code{\link[=PLNnetworkfit-class]{PLNnetworkfit}}
}
